apiVersion: tekton.dev/v1alpha1
kind: Task
metadata:
  name: deploy-pacman-app
spec:
  inputs:
    resources:
      - name: image
        type: image
    params:
      - name: APP_NAME
        description: The name of the application
        default: 'pacman-app-tekton'
        type: string
      - name: APP_VERSION
        description: The version of the application
        default: '1.0'
        type: string
      - name: DEPLOY_PROJECT
        description: The project where you deploy the app
        default: 'pacman-app-dev'
        type: string

  steps:
      - name: create-app
        image: quay.io/openshift/origin-cli:latest
        workingDir: /workspace/source
        command: ["/bin/bash", "-c"]
        args:
          - |-
            oc get deployment $(inputs.params.APP_NAME) -n $(inputs.params.DEPLOY_PROJECT)
            if [[ $? -ne 0 ]]
            then
                oc new-app -i $(inputs.params.APP_NAME) -n $(inputs.params.DEPLOY_PROJECT)
            else
                echo "Application already exists."
            fi
      - name: expose-app
        image: quay.io/openshift/origin-cli:latest
        workingDir: /workspace/source
        command: ["/bin/bash", "-c"]
        args:
          - |-
            oc get svc $(inputs.params.APP_NAME) -n $(inputs.params.DEPLOY_PROJECT)
            if [[ $? -ne 0 ]]
            then
                oc expose svc/$(inputs.params.APP_NAME) -n $(inputs.params.DEPLOY_PROJECT)
            else
                echo "Application already exists."
            fi
      - name: set-app-labels
        image: quay.io/openshift/origin-cli:latest
        workingDir: /workspace/source
        command: ["/bin/bash", "-c"]
        args:
          - |-
            oc label deployment/$(inputs.params.APP_NAME) app.kubernetes.io/name=nodejs --overwrite -n $(inputs.params.DEPLOY_PROJECT)
            oc label deployment/$(inputs.params.APP_NAME) app.version=$(inputs.params.APP_VERSION) --overwrite -n $(inputs.params.DEPLOY_PROJECT)
            oc set env deployment/$(inputs.params.APP_NAME) app.version=$(inputs.params.APP_VERSION) -n $(inputs.params.DEPLOY_PROJECT)
      - name: set-app-probes
        image: quay.io/openshift/origin-cli:latest
        workingDir: /workspace/source
        command: ["/bin/bash", "-c"]
        args:
          - |-
            oc set probe deployment/$(inputs.params.APP_NAME) --remove --readiness --liveness -n $(inputs.params.DEPLOY_PROJECT)
            oc set probe deployment/$(inputs.params.APP_NAME) --readiness --get-url=http://:8080/ --initial-delay-seconds=30 -n $(inputs.params.DEPLOY_PROJECT)
      - name: set-app-autoscale
        image: quay.io/openshift/origin-cli:latest
        workingDir: /workspace/source
        command: ["/bin/bash", "-c"]
        args:
          - |-
            oc get hpa $(inputs.params.APP_NAME)  -n $(inputs.params.DEPLOY_PROJECT)
            if [[ $? -ne 0 ]]
            then
                oc autoscale deployment $(inputs.params.APP_NAME) --min 1 --max 2 --cpu-percent=75 -n $(inputs.params.DEPLOY_PROJECT)
            else
                echo "Application autoscale is already configured."
            fi
      - name: describe-app-triggers
        image: quay.io/openshift/origin-cli:latest
        workingDir: /workspace/source
        command: ["/bin/bash", "-c"]
        args:
          - |-
            oc set triggers deployment/$(inputs.params.APP_NAME) -n $(inputs.params.DEPLOY_PROJECT)
